import binascii

key

chunks, chunkSize = len(key), 8
l = [ key[i:i + chunkSize] for i in range(0, chunks, chunkSize) ]

# The logic part

s = ""

for b in l:

    b0 = int(b[0])
    b1 = int(b[1])
    b2 = int(b[2])
    b3 = int(b[3])
    b4 = int(b[4])
    b5 = int(b[5])
    b6 = int(b[6])
    b7 = int(b[7])

    c1 = b0 and (not b2)
    c2 = (not b2) and (not b1)
    c3 = b0 and b1
    c4 = b5 ^ b6
    c5 = (not b1) ^ (not b7)   

    d1 = c1 and (not b3)
    d2 = c2 and (not b3)
    d3 = c3 and (not b3)
    d4 = b2 and (not b5)
    d5 = c5 and b2
    
    e1 = d1 and (not b4)
    e2 = d2 and (not b4)
    e3 = d3 and (not b4)
    e4 = d4 and c4

    f1 = e1 or e2
    f2 = e3 or e4
    
    g = f2 or d5

    o = int(g or f1)
    s += str(o)

password = binascii.unhexlify(hex(int(s,2))[2:])
print(password)
print(len(password))










