diff -Naur ipyida/ipyida/ida_plugin.py ipyida_patched/ipyida/ida_plugin.py
--- ipyida/ipyida/ida_plugin.py	2017-03-15 09:00:25.501461513 +0100
+++ ipyida_patched/ipyida/ida_plugin.py	2017-03-15 09:00:48.151353007 +0100
@@ -7,7 +7,7 @@
 # See LICENSE file for redistribution.
 
 import idaapi
-from ipyida import qtconsole, kernel
+from ipyida import kernel
 
 class IPyIDAPlugIn(idaapi.plugin_t):
     wanted_name = "IPyIDA"
@@ -15,24 +15,24 @@
     flags = 0
     comment = ""
     help = "Starts an IPython qtconsole in IDA Pro"
-    
+
     def init(self):
         global _kernel
         self.kernel = _kernel
-        self.widget = None
+       # self.widget = None
         return idaapi.PLUGIN_KEEP
 
     def run(self, args):
         if not self.kernel.started:
             self.kernel.start()
-        if self.widget is None:
-            self.widget = qtconsole.IPythonConsole(self.kernel.connection_file)
-        self.widget.Show()
+        #if self.widget is None:
+        #    self.widget = qtconsole.IPythonConsole(self.kernel.connection_file)
+        #self.widget.Show()
 
     def term(self):
-        if self.widget:
-            self.widget.Close(0)
-            self.widget = None
+       # if self.widget:
+       #     self.widget.Close(0)
+       #     self.widget = None
         if self.kernel:
             self.kernel.stop()
 
diff -Naur ipyida/ipyida/kernel.py ipyida_patched/ipyida/kernel.py
--- ipyida/ipyida/kernel.py	2017-03-15 09:00:25.501461513 +0100
+++ ipyida_patched/ipyida/kernel.py	2017-03-15 09:00:48.151353007 +0100
@@ -8,9 +8,9 @@
 # Author: Marc-Etienne M.Léveillé <leveille@eset.com>
 # See LICENSE file for redistribution.
 
-from IPython.kernel.zmq.kernelapp import IPKernelApp
+from ipykernel.kernelapp import IPKernelApp
 import IPython.utils.frame
-import IPython.kernel.zmq.iostream
+from ipykernel.iostream import OutStream
 
 import sys
 import os
@@ -33,7 +33,7 @@
 # in the console window. Used by wrap_excepthook.
 _ida_excepthook = sys.excepthook
 
-class IDATeeOutStream(IPython.kernel.zmq.iostream.OutStream):
+class IDATeeOutStream(OutStream):
 
     def write(self, string):
         "Write on both the previously saved IDA std output and zmq's stream"
@@ -57,7 +57,7 @@
     def __init__(self):
         self._timer = None
         self.connection_file = None
-    
+
     def start(self):
         if self._timer is not None:
             raise Exception("IPython kernel is already running.")
@@ -77,7 +77,7 @@
             main = app.kernel.shell._orig_sys_modules_main_mod
             if main is not None:
                 sys.modules[app.kernel.shell._orig_sys_modules_main_name] = main
-        
+
             # IPython <= 3.2.x will send exception to sys.__stderr__ instead of
             # sys.stderr. IDA's console will not be able to display exceptions if we
             # don't send it to IDA's sys.stderr. To fix this, we call both the
@@ -99,7 +99,7 @@
 
         app.kernel.start()
         app.kernel.do_one_iteration()
-    
+
         self.connection_file = app.connection_file
 
         def ipython_kernel_iteration():
diff -Naur ipyida/ipyida/qtconsole.py ipyida_patched/ipyida/qtconsole.py
--- ipyida/ipyida/qtconsole.py	2017-03-15 09:00:25.501461513 +0100
+++ ipyida_patched/ipyida/qtconsole.py	2017-03-15 09:00:48.151353007 +0100
@@ -42,17 +42,18 @@
     import PySide
     PySide.QtSvg = None
 
-from IPython.qt.console.rich_ipython_widget import RichIPythonWidget
+#from IPython.qt.console.rich_ipython_widget import RichIPythonWidget
+from qtconsole import rich_ipython_widget
 from IPython.qt.manager import QtKernelManager
 from IPython.qt.client import QtKernelClient
 from IPython.lib.kernel import find_connection_file
 
 class IPythonConsole(idaapi.PluginForm):
-    
+
     def __init__(self, connection_file, *args):
         super(IPythonConsole, self).__init__(*args)
         self.connection_file = connection_file
-    
+
     def OnCreate(self, form):
         try:
             if is_using_pyqt5():
